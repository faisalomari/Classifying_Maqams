class MaqamCNN1(nn.Module):
    def __init__(self):
        super(MaqamCNN1, self).__init__()
        
        self.conv1 = nn.Conv1d(in_channels=1, out_channels=16, kernel_size=3, padding=1)
        self.bn1 = nn.BatchNorm1d(16)
        self.relu1 = nn.ReLU()
        self.pool1 = nn.MaxPool1d(kernel_size=3)
        
        self.conv2 = nn.Conv1d(in_channels=2, out_channels=16, kernel_size=7, padding=1)
        self.bn2 = nn.BatchNorm1d(16)
        self.relu2 = nn.ReLU()

        self.conv3 = nn.Conv1d(in_channels=16, out_channels=32, kernel_size=5, padding=1)
        self.bn3 = nn.BatchNorm1d(32)
        self.relu3 = nn.ReLU()

        self.conv4 = nn.Conv1d(in_channels=32, out_channels=64, kernel_size=5, padding=1)
        self.bn4 = nn.BatchNorm1d(64)
        self.relu4 = nn.ReLU()

        self.conv5 = nn.Conv1d(in_channels=64, out_channels=64, kernel_size=3, padding=1)
        self.bn5 = nn.BatchNorm1d(64)
        self.relu5 = nn.ReLU()

        self.conv6 = nn.Conv1d(in_channels=64, out_channels=64, kernel_size=3, padding=1)
        self.bn6 = nn.BatchNorm1d(64)
        self.relu6 = nn.ReLU()

        self.conv7 = nn.Conv1d(in_channels=64, out_channels=64, kernel_size=3, padding=1)
        self.bn7 = nn.BatchNorm1d(64)
        self.relu7 = nn.ReLU()

        self.conv8 = nn.Conv1d(in_channels=64, out_channels=64, kernel_size=3, padding=1)
        self.bn8 = nn.BatchNorm1d(64)
        self.relu8 = nn.ReLU()

        self.conv9 = nn.Conv1d(in_channels=64, out_channels=32, kernel_size=3, padding=1)
        self.bn9 = nn.BatchNorm1d(32)
        self.relu9 = nn.ReLU()

        self.conv10 = nn.Conv1d(in_channels=32, out_channels=16, kernel_size=3, padding=1)
        self.bn10 = nn.BatchNorm1d(16)
        self.relu10 = nn.ReLU()

        self.fc1 = nn.Linear(1024, 256)
        self.dropout1 = nn.Dropout(p=0.5)

        self.fc2 = nn.Linear(256, 64)
        self.dropout2 = nn.Dropout(p=0.5)

        self.fc3 = nn.Linear(64, 10)

    def forward(self, x):
        print("X.shape1 = ", x.shape)
        x = torch.squeeze(x, 3)

        x = self.conv1(x)
        x = self.bn1(x)
        x = self.relu1(x)

        x = self.conv2(x)
        x = self.bn2(x)
        x = self.relu2(x)

        x = self.conv3(x)
        x = self.bn3(x)
        x = self.relu3(x)

        x = self.conv4(x)
        x = self.bn4(x)
        x = self.relu4(x)

        x = self.conv5(x)
        x = self.bn5(x)
        x = self.relu5(x)

        x = self.conv6(x)
        x = self.bn6(x)
        x = self.relu6(x)

        x = self.conv7(x)
        x = self.bn7(x)
        x = self.relu7(x)

        x = self.conv8(x)
        x = self.bn8(x)
        x = self.relu8(x)

        x = self.conv9(x)
        x = self.bn9(x)
        x = self.relu9(x)

        x = self.conv10(x)
        x = self.bn10(x)
        x = self.relu10(x)

        x = x.view(x.size(0), -1)

        x = self.fc1(x)
        x = self.dropout1(x)

        x = self.fc2(x)
        x = self.dropout2(x)

        x = self.fc3(x)

        return x